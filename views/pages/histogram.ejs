<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Histogram with Cumulative Distribution</title>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100">
    <div class="w-64 h-screen bg-white shadow-md fixed top-0 left-0">
        <%- include('../layouts/sidebar') %>
    </div>
    <!-- Main Content -->
    <div class="flex-1 ml-64 mr-28 p-10 overflow-y-auto">
        <%- include('../partials/sidebar') %>

        <h1 class="text-2xl font-bold mb-4">Histogram with Cumulative Distribution</h1>
        <div id="chart-controls" class="mb-4">
            <div class="mb-2">
                <label for="column-select" class="mr-2">Select Column:</label>
                <select id="column-select" class="border p-2 rounded"></select>
            </div>
            <div class="mb-2">
                <label for="bin-size" class="mr-2">Bin Size:</label>
                <input type="number" id="bin-size" class="border p-2 rounded" min="1" value="10">
            </div>
            <div class="mb-2">
                <label class="inline-flex items-center">
                    <input type="checkbox" id="cumulative-checkbox" class="form-checkbox" checked>
                    <span class="ml-2">Show Cumulative Distribution</span>
                </label>
            </div>
            <button id="plot-button" class="mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                Plot
            </button>
        </div>
        <div id="chart"></div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const csvData = JSON.parse(localStorage.getItem("csvData"));
            if (csvData) {
                populateColumnSelect(csvData[0]);
            } else {
                document.getElementById("chart-controls").innerHTML = "<p>Please upload a CSV file first.</p>";
            }
        });

        document.getElementById("plot-button").addEventListener("click", plotHistogram);

        function populateColumnSelect(headers) {
            const columnSelect = document.getElementById("column-select");
            columnSelect.innerHTML = "";
            headers.forEach((header, index) => {
                columnSelect.options.add(new Option(header.trim(), index));
            });
        }

        function plotHistogram() {
            const csvData = JSON.parse(localStorage.getItem("csvData"));
            const columnIndex = parseInt(document.getElementById("column-select").value);
            const binSize = parseInt(document.getElementById("bin-size").value);
            const showCumulative = document.getElementById("cumulative-checkbox").checked;

            const columnData = csvData.slice(1).map(row => parseFloat(row[columnIndex])).filter(val => !isNaN(val));
            columnData.sort((a, b) => a - b);

            const trace = {
                x: columnData,
                type: 'histogram',
                nbinsx: binSize,
                name: 'Histogram'
            };

            const data = [trace];

            if (showCumulative) {
                const cumulativeData = columnData.map((_, index) => {
                    return (index + 1) / columnData.length;
                });

                const cumulativeTrace = {
                    x: columnData,
                    y: cumulativeData,
                    type: 'scatter',
                    mode: 'lines',
                    name: 'Cumulative Distribution',
                    yaxis: 'y2'
                };
                data.push(cumulativeTrace);
            }

            const layout = {
                title: `Histogram and Cumulative Distribution of ${csvData[0][columnIndex]}`,
                xaxis: { title: csvData[0][columnIndex] },
                yaxis: { title: 'Frequency' },
                yaxis2: {
                    title: 'Cumulative Probability',
                    overlaying: 'y',
                    side: 'right',
                    range: [0, 1]
                },
                showlegend: true
            };

            Plotly.newPlot('chart', data, layout);
        }
    </script>
</body>
</html>