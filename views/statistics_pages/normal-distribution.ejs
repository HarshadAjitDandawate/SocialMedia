<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Normal Distribution</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML"></script>
</head>
<body class="bg-gray-100">
    <div class="w-64 h-screen bg-white shadow-md fixed top-0 left-0">
        <%- include('../layouts/sidebar') %>
    </div>

    <div class="flex-1 ml-64 p-10 overflow-y-auto">
        <h1 class="text-3xl font-bold mb-6">Normal Distribution</h1>

        <div class="bg-white shadow-md rounded-lg p-6 mb-8">
            <h2 class="text-2xl font-semibold mb-4">Interactive Visualization</h2>
            <div id="plot" class="w-full h-96 mb-6"></div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                    <label for="mean" class="block text-lg font-medium mb-2">Mean (μ):</label>
                    <div class="flex items-center">
                        <input type="range" id="mean" min="-5" max="5" step="0.1" value="0" class="w-full">
                        <span id="meanValue" class="ml-4 text-lg">0</span>
                    </div>
                </div>
                <div>
                    <label for="stddev" class="block text-lg font-medium mb-2">Standard Deviation (σ):</label>
                    <div class="flex items-center">
                        <input type="range" id="stddev" min="0.1" max="3" step="0.1" value="1" class="w-full">
                        <span id="stddevValue" class="ml-4 text-lg">1</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="bg-white shadow-md rounded-lg p-6 mb-8">
            <h2 class="text-2xl font-semibold mb-4">Understanding Normal Distribution</h2>
            <p class="mb-4">
                The normal distribution, also known as the Gaussian distribution, is a probability distribution that is symmetric about the mean, showing that data near the mean are more frequent in occurrence than data far from the mean.
            </p>
            <h3 class="text-xl font-semibold mb-2">Key Properties:</h3>
            <ul class="list-disc list-inside mb-4">
                <li>Bell-shaped curve</li>
                <li>Symmetric about the mean</li>
                <li>The mean, median, and mode are all equal</li>
                <li>68% of the data falls within one standard deviation of the mean</li>
                <li>95% of the data falls within two standard deviations of the mean</li>
                <li>99.7% of the data falls within three standard deviations of the mean</li>
            </ul>
        </div>

        <div class="bg-white shadow-md rounded-lg p-6">
            <h2 class="text-2xl font-semibold mb-4">Formula</h2>
            <p class="mb-4">The probability density function of a normal distribution is given by:</p>
            <div class="flex justify-center mb-4">
                <div id="formula" class="text-2xl"></div>
            </div>
            <p>Where:</p>
            <ul class="list-disc list-inside">
                <li>x is a random variable</li>
                <li>μ is the mean</li>
                <li>σ is the standard deviation</li>
                <li>e is the base of the natural logarithm (approximately 2.71828)</li>
                <li>π is pi (approximately 3.14159)</li>
            </ul>
        </div>
    </div>

    <script>
        function plotNormalDistribution(mean, stddev) {
            const x = [];
            const y = [];
            const step = 0.1;

            for (let i = -6; i <= 6; i += step) {
                x.push(i);
                y.push((1 / (stddev * Math.sqrt(2 * Math.PI))) * Math.exp(-0.5 * Math.pow((i - mean) / stddev, 2)));
            }

            const trace = {
                x: x,
                y: y,
                type: 'scatter',
                mode: 'lines',
                line: { color: 'blue' },
                name: 'Normal Distribution'
            };

            const layout = {
                title: `Normal Distribution (μ = ${mean.toFixed(1)}, σ = ${stddev.toFixed(1)})`,
                xaxis: { title: 'X', range: [-6, 6] },
                yaxis: { title: 'Probability Density', range: [0, 0.5] },
                shapes: [
                    { type: 'line', x0: mean, y0: 0, x1: mean, y1: 0.5, line: { color: 'red', dash: 'dash' } },
                    { type: 'line', x0: mean - stddev, y0: 0, x1: mean - stddev, y1: 0.5, line: { color: 'green', dash: 'dot' } },
                    { type: 'line', x0: mean + stddev, y0: 0, x1: mean + stddev, y1: 0.5, line: { color: 'green', dash: 'dot' } },
                    { type: 'line', x0: mean - 2*stddev, y0: 0, x1: mean - 2*stddev, y1: 0.5, line: { color: 'orange', dash: 'dot' } },
                    { type: 'line', x0: mean + 2*stddev, y0: 0, x1: mean + 2*stddev, y1: 0.5, line: { color: 'orange', dash: 'dot' } },
                    { type: 'line', x0: mean - 3*stddev, y0: 0, x1: mean - 3*stddev, y1: 0.5, line: { color: 'purple', dash: 'dot' } },
                    { type: 'line', x0: mean + 3*stddev, y0: 0, x1: mean + 3*stddev, y1: 0.5, line: { color: 'purple', dash: 'dot' } },
                    // Colored regions
                    { type: 'rect', x0: mean - stddev, x1: mean + stddev, y0: 0, y1: 1, fillcolor: 'rgba(144, 238, 144, 0.5)', line: { width: 0 } },
                    { type: 'rect', x0: mean - 2*stddev, x1: mean - stddev, y0: 0, y1: 1, fillcolor: 'rgba(255, 165, 0, 0.5)', line: { width: 0 } },
                    { type: 'rect', x0: mean + stddev, x1: mean + 2*stddev, y0: 0, y1: 1, fillcolor: 'rgba(255, 165, 0, 0.5)', line: { width: 0 } },
                    { type: 'rect', x0: mean - 3*stddev, x1: mean - 2*stddev, y0: 0, y1: 1, fillcolor: 'rgba(255, 192, 203, 0.5)', line: { width: 0 } },
                    { type: 'rect', x0: mean + 2*stddev, x1: mean + 3*stddev, y0: 0, y1: 1, fillcolor: 'rgba(255, 192, 203, 0.5)', line: { width: 0 } }
                ],
                annotations: [
                    { x: mean, y: 0.45, text: 'Mean', showarrow: false },
                    { x: mean + stddev, y: 0.45, text: '+1σ (68%)', showarrow: false },
                    { x: mean + 2*stddev, y: 0.45, text: '+2σ (95%)', showarrow: false },
                    { x: mean + 3*stddev, y: 0.45, text: '+3σ (99.7%)', showarrow: false }
                ]
            };

            Plotly.react('plot', [trace], layout);
        }

        function updatePlot() {
            const mean = parseFloat(document.getElementById('mean').value);
            const stddev = parseFloat(document.getElementById('stddev').value);
            document.getElementById('meanValue').textContent = mean.toFixed(1);
            document.getElementById('stddevValue').textContent = stddev.toFixed(1);
            plotNormalDistribution(mean, stddev);
        }

        document.getElementById('mean').addEventListener('input', updatePlot);
        document.getElementById('stddev').addEventListener('input', updatePlot);

        updatePlot();

        document.getElementById('formula').innerHTML = '\\[ f(x) = \\frac{1}{\\sigma\\sqrt{2\\pi}} e^{-\\frac{1}{2}\\left(\\frac{x-\\mu}{\\sigma}\\right)^2} \\]';
        MathJax.Hub.Queue(["Typeset", MathJax.Hub]);
    </script>
</body>
</html>